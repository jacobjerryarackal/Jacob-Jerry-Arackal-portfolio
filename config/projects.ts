import { ValidCategory, ValidExpType, ValidSkills } from "./constants";

interface PagesInfoInterface {
  title: string;
  imgArr: string[];
  description?: string;
}

interface DescriptionDetailsInterface {
  paragraphs: string[];
  bullets: string[];
}

export interface ProjectInterface {
  id: string;
  type: ValidExpType;
  companyName: string;
  category: ValidCategory[];
  shortDescription: string;
  websiteLink?: string;
  githubLink?: string;
  techStack: ValidSkills[];
  startDate: Date;
  endDate: Date;
  companyLogoImg: any;
  descriptionDetails: DescriptionDetailsInterface;
  pagesInfoArr: PagesInfoInterface[];
}

export const Projects: ProjectInterface[] = [
  {
  id: "superai",
  companyName: "SuperAI Documents",
  type: "Personal",
  category: ["AI/ML", "NLP", "Full Stack"],
  shortDescription:
    "Built an AI-powered RAG application for document understanding, retrieval, and intelligent Q&A.",
  githubLink: "https://github.com/jacobjerryarackal/SuperAI-Documents", 
  techStack: [
    "Python",
    "Vector Database",
    "Streamlit",
    "Gradio",
    "LangChain",
    "FAISS",
    "HuggingFace Embeddings",
    "Groq",
    "OpenAI",
    "PyPDF2"
  ],
  startDate: new Date("2024-07-01"),
  endDate: new Date("2024-09-30"),
  companyLogoImg: "/projects/superai/logo.png",
  pagesInfoArr: [
     {
      title: "Streamlit GUI",
      description:
        "Allows users to interact with Streamlit GUI",
      imgArr: ["/projects/superai/streamlit gui.png","/projects/superai/gui 2.png"],
    },
    {
      title: "Document Upload & Processing",
      description:
        "Allows users to upload PDFs, extract text, and generate embeddings for semantic search.",
      imgArr: ["/projects/superai/document upload.png"],
    },
    {
      title: "Interactive Q&A",
      description:
        "Users can ask natural language questions and receive AI-powered responses derived directly from document context.",
      imgArr: ["/projects/superai/Interactive Q&A.png","/projects/superai/Q&A 2.png","/projects/superai/Q&A 3.png"],
    },
  ],
  descriptionDetails: {
    paragraphs: [
      "SuperAI Documents is an end-to-end AI-powered assistant designed for intelligent document processing, semantic search, and contextual Q&A.",
      "Built with LangChain, FAISS, and LlamaIndex, the system leverages advanced embedding-based retrieval for efficient document understanding.",
      "Users can interact through an intuitive Streamlit/Gradio-based frontend, where they ask questions and receive context-aware answers generated by LLMs such as Groq or OpenAI.",
      "This project highlights expertise in RAG architectures, vector search, and building scalable document intelligence solutions."
    ],
    bullets: [
      "Implemented Retrieval-Augmented Generation (RAG) for accurate and grounded responses",
      "Used LangChain with FAISS and HuggingFace embeddings for semantic search",
      "Integrated Groq and OpenAI APIs for scalable LLM-powered Q&A",
      "Designed a Streamlit/Gradio UI for interactive chat with documents",
      "Maintained conversation history for multi-turn contextual queries",
      "Supported multiple file formats including PDF, DOCX, and TXT",
      "Optimized performance with vector databases for fast similarity search",
      "Demonstrated real-world application of AI in knowledge management and document automation"
    ],
  },
},
  {
  id: "movie-ticket-booking",
  companyName: "Movie Ticket Booking",
  type: "Professional",
  category: ["Web Dev", "Full Stack"],
  shortDescription: "Full-stack movie ticket booking app with OAuth, seat selection and payment integration.",
  websiteLink: "http://localhost:3000",
  githubLink: "https://github.com/jacobjerryarackal/BookMovie",
  techStack: ["Next.js", "React", "Node.js", "Express", "MongoDB", "Clerk", "Razorpay", "Twilio"],
  startDate: new Date("2024-07-01"),
  endDate: new Date("2024-09-01"),
  companyLogoImg: "/projects/movie/logo.png",
  pagesInfoArr: [
    { title: "Sign In", imgArr: ["/projects/movie/Sign In.png"] },
    { title: "Landing / Browse", imgArr: ["/projects/movie/Landing.png"] },
    { title: "Movie List", imgArr: ["/projects/movie/Movie List.png"] },
    { title: "Movie Details", imgArr: ["/projects/movie/Movie Detail.png"] },
    { title: "Seat Selection", imgArr: ["/projects/movie/Seat Selection.png"] },
    { title: "Seat Confirmation", imgArr: ["/projects/movie/Seat Confirmation.png"] },
    { title: "Ticket Details", imgArr: ["/projects/movie/Ticket Details.png"] },
    { title: "Ticket Confirmation", imgArr: ["/projects/movie/Ticket Confirmation.png"] },
    { title: "Razorpay Payment Gateway", imgArr: ["/projects/movie/Razorpay.png"] },
    { title: "Razorpay Payment Process", imgArr: ["/projects/movie/Razorpay payment process.png"] },
    { title: "Razorpay Payment Sucess", imgArr: ["/projects/movie/Razorpay payment sucess.png"] },
    { title: "Whatsapp Confirmation", imgArr: ["/projects/movie/Whatsapp Confirmation.jpeg"] },


  ],
  descriptionDetails: {
    paragraphs: [
      "Built an end-to-end movie ticket booking system with seat selection, OTP & email verification, and payment integration.",
      "Implemented OAuth (Google) for authentication, Clerk for user management, and Stripe for payments.",
    ],
    bullets: [
      "Implemented scalable seat booking with optimistic locking.",
      "Integrated OAuth and 2FA flows for secure sign-in using Clerk.",
      "Added Razorpay Payement for payment process.",
    ],
  },
},
{
  id: "car-booking",
  companyName: "CarApp",
  type: "Professional",
  category: ["Web Dev", "Full Stack"],
  shortDescription:
    "Built a full-featured vehicle booking & management app with Next.js frontend + GraphQL-powered backend, enabling dynamic searches, scheduling, and user & vehicle management.",
  websiteLink: "http://localhost:3000",
  githubLink: "https://github.com/jacobjerryarackal/CarApp",
  techStack: ["Next.js", "Typescript", "React", "GraphQL", "Node.js", "PostgreSQL", "Prisma", "Stripe"],
  startDate: new Date("2024-01-01"),    // approximate start
  endDate: new Date("2024-06-01"),      // or latest update
  companyLogoImg: "/projects/carapp/logo.png", // you may want to add a logo
  pagesInfoArr: [
    { title: "Sign In", imgArr: ["/projects/carapp/Car login.png"] },
    { title: "Admin Sign In", imgArr: ["/projects/carapp/Admin car login.png"] },
    {
      title: "Main Car Listing Page",
      description:
        "List of available vehicles with search, filters and images rendered using Next.js for client-side dynamic filtering.",
      imgArr: ["/projects/carapp/Home.png","/projects/carapp/Car list.png","/projects/carapp/Car list 2.png"],
    },
    {
      title: "Vehicle Detail & Pricing Page",
      description:
        "Detailed view showing vehicle features, price tiers, and availability, fetched via GraphQL queries.",
      imgArr: ["/projects/carapp/Car details.png", "/projects/carapp/Car details 2.png", "/projects/carapp/Car details 3.png",],
    },
    {
      title: "Booking Workflow",
      description:
        "Users can book vehicles, choose dates & view booking summaries; managed with State and GraphQL mutations.",
      imgArr: ["/projects/carapp/Car Booking.png","/projects/carapp/Car Booking 2.png","/projects/carapp/Car Booking 3.png",],
    },
    { title: "Stripe Payment", imgArr: ["/projects/carapp/Stripe Payment.png","/projects/carapp/Stripe payment 2.png"] },
    {
      title: "Admin Dashboard",
      description:
        "Admin panel for handling vehicles, manufacturers, models, pricing and user management. CRUD operations via GraphQL.",
      imgArr: ["/projects/carapp/Admin vehicle dashboard.png",],
    }
  ],
  descriptionDetails: {
    paragraphs: [
      `CarApp is built as a full-stack vehicle booking & management platform with focus on both user experience and admin operations. I employed Next.js + React for the frontend and a GraphQL server (Node + Prisma + PostgreSQL) for the backend to provide strongly typed, efficient API interactions.`,
      `All data fetching (vehicles, features, pricing, bookings) is done via GraphQL queries and mutations. I structured the schema so vehicle types, feature associations, and pricing tiers are dynamically configurable, giving users and admins flexibility.`,
      `I ensured data consistency with Prisma migrations and leveraged PostgreSQL for relational data integrity (e.g. many‐to‐many between vehicles and features).`,
      `On the frontend, responsive UI handles image loading/fallbacks, filter/search states, and optimized rendering. Also handled error/fallback states for missing images etc., improving UX robustness.`
    ],
    bullets: [
      "Built a GraphQL API for all core data models: Vehicle, Feature, VehicleType, Manufacturer, Booking, Pricing.",
      "Implemented many-to-many relations (vehicles ↔ features, vehicles ↔ vehicle types) with Prisma.",
      "Used Next.js for SSR/SSG where appropriate, with dynamic pages for vehicle detail views.",
      "Set up image fallback mechanisms, client-side state for filters & search, and ensured responsive UI UX.",
      "Designed admin panel with CRUD capabilities for content management via GraphQL mutations."
    ]
  }
},
  {
  id: "procoder",
  companyName: "PROCODER - Multi-Programming Code Assistant",
  type: "Personal",
  category: ["AI/ML", "Full Stack", "Developer Tools"],
  shortDescription:
    "Built an AI-powered end-to-end code assistant app using CodeLlama, LLaMA2, and Gradio with support for multi-language programming and interactive user interface.",
  githubLink:
    "https://github.com/jacobjerryarackal/PROCODER-End-To-End-Multi-Programming-Code-Assistant-App-Using-CodeLlama-LLAMA2-Large-Language-Model",
  techStack: [
    "Python",
    "Gradio",
    "Ollama",
    "CodeLlama",
    "LLaMA2",
    "REST API",
    "Requests",
    "JSON"
  ],
  startDate: new Date("2024-04-01"),
  endDate: new Date("2024-06-30"),
  companyLogoImg: "/projects/procoder/logo.png",
  pagesInfoArr: [
    {
      title: "Gradio UI",
      description:
        "Interactive Gradio-based user interface for entering prompts and viewing AI-generated code outputs.",
      imgArr: ["/projects/procoder/Gradio.png"],
    },
    {
      title: "Prompt History",
      description:
        "Maintains conversation history to provide context-aware responses from the model.",
      imgArr: ["/projects/procoder/prompt history.png"],
    },
    {
      title: "Code Generation",
      description:
        "Generates optimized, multi-language code snippets tailored to user queries.",
      imgArr: ["/projects/procoder/code generation.png","/projects/procoder/code generation 2.png"],
    },
  ],
  descriptionDetails: {
    paragraphs: [
      "PROCODER is an end-to-end AI-powered coding assistant application designed to help developers generate, debug, and optimize code in multiple programming languages.",
      "Built using CodeLlama and LLaMA2 models, the application connects with the Ollama API to deliver context-aware code completions and solutions.",
      "The frontend is developed with Gradio, providing an easy-to-use interface for users to input prompts, view generated results, and maintain a continuous conversation history.",
      "This project demonstrates expertise in AI model integration, REST API communication, and interactive tool development for developer productivity."
    ],
    bullets: [
      "Integrated CodeLlama and LLaMA2 models with Ollama API for AI-driven code generation",
      "Developed interactive Gradio-based interface with support for multi-turn conversations",
      "Implemented conversation history tracking for better context-aware responses",
      "Designed error-handling mechanisms to manage failed API responses",
      "Focused on supporting multiple programming languages for diverse developer needs",
      "Optimized request handling and response parsing using Python Requests and JSON",
      "Delivered a scalable AI-powered coding assistant tool for personal and professional use"
    ],
  },
},
  {
    id: "builtdesign-blogs",
    companyName: "Builtdesign Blogs",
    type: "Professional",
    category: ["Web Dev", "Full Stack", "UI/UX"],
    shortDescription:
      "Crafted Builtdesign's vibrant Blogs Website using Netlify CMS and React for engaging content experiences.",
    websiteLink: "https://blog.builtdesign.in",
    techStack: ["Next.js", "React", "Node.js", "MongoDB", "Typescript"],
    startDate: new Date("2022-03-01"),
    endDate: new Date("2022-07-01"),
    companyLogoImg: "/projects/builtdesign-blogs/logo.png",
    pagesInfoArr: [
      {
        title: "Blog Landing Page",
        description:
          "Modern and responsive landing page showcasing featured articles",
        imgArr: ["/projects/builtdesign-blogs/blog_2.webp"],
      },
      {
        title: "Blog Listing",
        description:
          "Organized display of all blog posts with search and filtering",
        imgArr: ["/projects/builtdesign-blogs/blog_3.webp"],
      },
      {
        title: "Category Navigation",
        description: "Intuitive category-based navigation system",
        imgArr: ["/projects/builtdesign-blogs/blog_1.webp"],
      },
      {
        title: "Article View",
        description:
          "Clean and readable article layout with rich media support",
        imgArr: [
          "/projects/builtdesign-blogs/blog_4.webp",
          "/projects/builtdesign-blogs/blog_5.webp",
        ],
      },
    ],
    descriptionDetails: {
      paragraphs: [
        "As part of the Builtdesign platform, I developed a sophisticated blog website that serves as a content hub for the company's thought leadership and industry insights. The project leveraged Next.js and React to create a fast, SEO-friendly platform.",
        "The blog platform features a modern, responsive design that prioritizes readability and user engagement. I implemented a robust content management system using Netlify CMS, enabling the content team to easily publish and manage blog posts.",
        "The architecture includes server-side rendering for optimal performance and SEO, while MongoDB provides flexible content storage. TypeScript ensures code reliability and maintainability throughout the application.",
        "Key features include category-based navigation, search functionality, and a rich text editor for content creation. The platform supports various content types including images, code snippets, and embedded media.",
      ],
      bullets: [
        "Developed a modern blog platform using Next.js and React with TypeScript",
        "Implemented Netlify CMS for efficient content management",
        "Created a responsive design that prioritizes readability and user engagement",
        "Built server-side rendering for optimal performance and SEO",
        "Integrated MongoDB for flexible content storage and management",
        "Developed category-based navigation and search functionality",
        "Implemented rich text editing capabilities for content creation",
      ],
    },
  },
  {
    id: "portfolio-card",
    companyName: "Portfolio Card",
    type: "Personal",
    category: ["Web Dev", "Frontend", "3D Modeling"],
    shortDescription:
      "Forged an immersive 3D Portfolio Card utilizing the prowess of Three.js and Blender, where art and technology converge in an interactive masterpiece.",
    websiteLink: "https://card.namanbarkiya.xyz/",
    githubLink: "https://github.com/namanbarkiya/3d-portfolio-card",
    techStack: ["React", "Javascript", "HTML 5", "CSS 3"],
    startDate: new Date("2022-03-01"),
    endDate: new Date("2022-07-01"),
    companyLogoImg: "/projects/card/logo.png",
    pagesInfoArr: [
      {
        title: "Card Views",
        description: "Front and back views of the interactive 3D card",
        imgArr: ["/projects/card/card_2.webp", "/projects/card/card_3.webp"],
      },
      {
        title: "Interactive Elements",
        description:
          "Custom links embedded in the 3D model with interactive animations",
        imgArr: ["/projects/card/card_1.webp"],
      },
      {
        title: "3D Model Development",
        description: "Blender project showcasing the model creation process",
        imgArr: ["/projects/card/card_4.webp"],
      },
    ],
    descriptionDetails: {
      paragraphs: [
        "In my personal, I've ventured into the world of creativity, fashioning a distinctive portfolio card through the utilization of Three.js.",
        "This portfolio card transcends convention; it emerges as a captivating 3D model, adorned with meticulous lighting arrangements that conjure a spellbinding visual journey.",
        "To materialize this concept, I've harnessed the combined potential of Three.js and Blender, orchestrating a meticulous crafting of the central 3D model that serves as the cornerstone of the card's allure.",
        "Yet, the allure extends beyond aesthetics. I've ingeniously interwoven custom links directly into the fabric of Three.js components. Through the creation and seamless integration of novel components, these additions elegantly rest upon the card's surface, mirroring its rotations and delivering an interactive dimension to my portfolio.",
        "The portfolio card itself is an opus of motion, perpetually swaying in an auto-rotational dance that unfurls its multifaceted essence. As an enhancement, I've introduced an instinctive user interaction element. A simple, intuitive drag of the card in specific directions grants viewers a comprehensive vantage, enabling exploration from every conceivable angle.",
        "At its core, my personal epitomizes technical finesse, artistic expression, and interactive design. The amalgamation of Three.js, Blender's prowess, and the innovation of component integration has birthed not only a portfolio card, but a dynamic encounter leaving an indelible imprint on all who partake.",
      ],
      bullets: [
        "Conceptualized and realized a distinct portfolio card using Three.js, highlighting creative exploration.",
        "Crafted a mesmerizing 3D model enhanced by thoughtful lighting arrangements, resulting in a captivating visual voyage.",
        "Leveraged the synergy of Three.js and Blender to meticulously sculpt and refine the central 3D model, embodying meticulous attention to detail.",
        "Innovatively integrated custom links within Three.js components, introducing an interactive layer via seamlessly incorporated new elements.",
        "Enabled an auto-rotating feature for the portfolio card, perpetually showcasing its various facets to observers.",
        "Introduced an instinctual user interaction mechanism, allowing viewers to comprehensively explore the card's dimensions through simple, intuitive dragging motions.",
        "Represented a fusion of technical prowess, artistic ingenuity, and interactive design in a project that reshapes the boundaries of conventional portfolio representation.",
      ],
    },
  },
  {
    id: "cirql-dashboard",
    companyName: "Cirql Dashboard",
    type: "Personal",
    category: ["Web Dev", "Frontend", "UI/UX"],
    shortDescription:
      "Created a dashboard project using React and Tailwind CSS, focusing on UI design and routing implementation.",
    websiteLink: "https://cirql-ui.namanbarkiya.xyz/",
    techStack: ["React", "Tailwind CSS", "Google Auth"],
    startDate: new Date("2023-01-01"),
    endDate: new Date("2023-02-15"),
    companyLogoImg: "/projects/cirql/logo.png",
    pagesInfoArr: [
      {
        title: "Dashboard Home",
        description:
          "Main dashboard view with analytics widgets and data visualization",
        imgArr: ["/projects/cirql/web_1.png", "/projects/cirql/web_2.png"],
      },
      {
        title: "Profile Page",
        description:
          "User profile management interface with customization options",
        imgArr: ["/projects/cirql/web_3.png", "/projects/cirql/web_4.png"],
      },
    ],
    descriptionDetails: {
      paragraphs: [
        "For the 'Cirql Dashboard' personal, I aimed to enhance my UI design skills and deepen my understanding of routing within a React application.",
        "I utilized React and Tailwind CSS to craft an intuitive dashboard interface that provides users with an organized overview of data and functionalities. The UI components were thoughtfully designed to ensure a seamless user experience.",
        "Incorporating Google Sign-In Authentication further fortified the project by adding a layer of security and convenience. Users are required to authenticate before accessing certain routes, ensuring the safety of sensitive information.",
        "The routing system was meticulously implemented to enable smooth navigation between different sections of the dashboard, simulating real-world use cases.",
        "Through this project, I've gained valuable insights into UI/UX design principles and the implementation of secure and efficient routing in React applications.",
      ],
      bullets: [
        "Created a user-friendly dashboard project using React and Tailwind CSS.",
        "Implemented Google Sign-In Authentication to ensure secure access to sensitive routes.",
        "Designed UI components to provide an intuitive and visually pleasing experience.",
        "Focused on implementing a smooth routing system to simulate real-world use cases.",
        "Enhanced my skills in UI design, routing, and component architecture.",
      ],
    },
  },
  {
    id: "inscript-hindi-typing",
    companyName: "Inscript Hindi Typing",
    type: "Personal",
    category: ["Web Dev", "UI/UX"],
    shortDescription:
      "Developed a user-friendly website for Inscript Hindi typing, addressing the need for a simple tool for Hindi writers to convey data digitally.",
    websiteLink: "https://hindityping.namanbarkiya.xyz",
    githubLink: "https://github.com/namanbarkiya/inscript-hindi-keyboard",
    techStack: ["HTML 5", "CSS 3", "Javascript"],
    startDate: new Date("2022-05-01"),
    endDate: new Date("2022-06-15"),
    companyLogoImg: "/projects/hindi-keyboard/logo.png",
    pagesInfoArr: [
      {
        title: "Typing Interface",
        description: "Minimal and user-friendly Inscript Hindi typing area",
        imgArr: ["/projects/hindi-keyboard/web_1.png"],
      },
      {
        title: "Copy and Download the file",
        description:
          "Export functionality allowing users to copy text or download as a document file",
        imgArr: [
          "/projects/hindi-keyboard/web_2.png",
          "/projects/hindi-keyboard/web_3.png",
        ],
      },
    ],
    descriptionDetails: {
      paragraphs: [
        "The 'Inscript Hindi Typing Website' project emerged from the need to provide a simple and accessible tool for Hindi writers, especially those in digital news and media, who wished to convey data in Hindi.",
        "Recognizing the challenges posed by complex software in the market, I set out to create a minimalistic typing area that catered to the needs of a vast community of Hindi typists in India.",
        "The project was designed to address the specific requirements of users familiar with the Inscript keyboard layout, mapping English and Hindi alphabets for seamless typing. The intuitive interface allowed users to effortlessly switch between languages, streamlining the process of content creation.",
        "Leveraging HTML and CSS, I crafted the website's UI to ensure a user-friendly experience. Additionally, Local Storage was utilized to enable users to save and retrieve their work, enhancing convenience and productivity.",
        "The website's focus on user experience and simplicity proved to be a key factor in its popularity among Hindi writers. By offering a tool that reduced the barriers to entry, I contributed to the digital empowerment of Hindi typists who previously faced challenges in conveying their message effectively.",
        "This project marked one of my initial forays into web development and highlighted the transformative potential of technology in addressing real-world challenges.",
      ],
      bullets: [
        "Developed a user-friendly website for Inscript Hindi typing.",
        "Catered to the needs of Hindi writers in digital news and media.",
        "Created a minimalistic and intuitive typing interface for the Inscript keyboard layout.",
        "Mapped English and Hindi alphabets to provide a seamless typing experience.",
        "Utilized HTML and CSS to design a user-friendly UI.",
        "Implemented Local Storage to enable users to save and retrieve their work.",
        "Contributed to the digital empowerment of Hindi typists by offering a simple tool.",
        "Marked one of my first web development projects, showcasing technology's potential for addressing real-world needs.",
      ],
    },
  },
];

export const featuredProjects = Projects.slice(0, 3);
